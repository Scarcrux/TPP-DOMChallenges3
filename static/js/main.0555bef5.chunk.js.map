{"version":3,"sources":["components/Menu.js","components/TableCell.js","components/TableRow.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","handleAddRow","handleAddColumn","handleRemoveRow","handleRemoveColumn","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","handleColorChange","dropDownValue","divider","handleFillUncolored","handleFillAll","handleClearAll","TableCell","grid","x","y","handleClick","onMouseEnter","handleMouseEnter","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","TableRow","row","i","cols","push","Table","cells","rows","id","App","state","map","concat","currentColor","setState","length","Array","fill","e","j","coloring","slice","initialGrid","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0555bef5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\n\nconst Menu = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Colorizer</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"#\" onClick={props.handleAddRow}>Add Row</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"#\" onClick={props.handleAddColumn}>Add Column</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"#\" onClick={props.handleRemoveRow}>Remove Row</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"#\" onClick={props.handleRemoveColumn}>Remove Column</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Color\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem onClick={() => props.handleColorChange(\"red\")} dropDownValue=\"red\">\n                  Red\n                </DropdownItem>\n                <DropdownItem onClick={() => props.handleColorChange(\"green\")} dropDownValue=\"green\">\n                  Green\n                </DropdownItem>\n                <DropdownItem onClick={() => props.handleColorChange(\"blue\")}>\n                  Blue\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={() => props.handleColorChange(\"default\")}>\n                  Reset\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <NavItem>\n              <NavLink href=\"#\" onClick={props.handleFillUncolored}>Fill Uncolored</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"#\" onClick={props.handleFillAll}>Fill All</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"#\" onClick={props.handleClearAll}>Clear All</NavLink>\n            </NavItem>\n          </Nav>\n          <NavLink href=\"https://www.techtalentpipeline.nyc/\">TTP</NavLink>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\n\nexport default function TableCell(props) {\n  const color = props.grid[props.x][props.y];\n  return (\n    <td className={\"grid-cell \" + color}\n      onClick={() => props.handleClick(props.x, props.y)}\n      onMouseEnter={() => props.handleMouseEnter(props.x, props.y)}\n      onMouseDown={() => props.handleMouseDown(props.x, props.y)}\n      onMouseUp={props.handleMouseUp}\n    >\n    </td>\n  );\n}\n","import React from \"react\";\nimport TableCell from \"./TableCell\";\n\nexport default function TableRow(props) {\n  const row = [];\n  for (let i = 0; i < props.cols; i++) {\n    row.push(\n      <TableCell\n        grid={props.grid}\n        handleClick={props.handleClick}\n        handleMouseEnter={props.handleMouseEnter}\n        handleMouseDown={props.handleMouseDown}\n        handleMouseUp={props.handleMouseUp}\n        x={props.row}\n        y={i}\n      />\n    );\n  }\n  return <tr className=\"grid-row\">{row}</tr>;\n}\n","import React from \"react\";\nimport TableRow from \"./TableRow\";\n\nfunction Table(props) {\n  const cells = [];\n  for (let i = 0; i < props.rows; i++) {\n    cells.push(\n      <TableRow\n        cols={props.cols}\n        grid={props.grid}\n        handleClick={props.handleClick}\n        handleMouseEnter={props.handleMouseEnter}\n        handleMouseDown={props.handleMouseDown}\n        handleMouseUp={props.handleMouseUp}\n        row={i}\n      />\n    );\n  }\n  return <table id=\"grid\"><tbody>{cells}</tbody></table>;\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Menu, Table } from \"./components\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const initialRow = 5;\n    const initialCol = 5;\n    const initialGrid = [];\n    for (let i = 0; i < initialRow; i++) {\n      initialGrid.push(new Array(initialCol).fill(\"default\"));\n    }\n\n    this.state = {\n      coloring: false,\n      currentColor: \"default\",\n      grid: initialGrid,\n    }\n  }\n\n  handleAddColumn = () => {\n    const grid = this.state.grid.map(row => row.concat(this.state.currentColor));\n    this.setState({grid: grid});\n  };\n\n  handleAddRow = () => {\n    if (this.state.grid.length === 0) {\n      this.setState({grid: [[this.state.currentColor]]});\n    } else {\n      const row = new Array(this.state.grid[0].length).fill(this.state.currentColor);\n      this.setState({grid: [...this.state.grid, row]});\n    }\n  };\n\n  handleClearAll = () => {\n    const grid = this.state.grid.map(row =>\n      row.map(() => \"default\")\n    );\n    this.setState({grid: grid});\n  };\n\n  handleClick = (x, y) => {\n    const grid = this.state.grid;\n    grid[x][y] = this.state.currentColor;\n    this.setState({grid: grid});\n  };\n\n  handleColorChange = (e) => {\n    this.setState({currentColor: e});\n  };\n\n  handleFillAll = () => {\n    const grid = this.state.grid.map(row =>\n      row.map(() => this.state.currentColor)\n    );\n    this.setState({grid: grid});\n  };\n\n  handleFillUncolored = () => {\n    const { currentColor } = this.state;\n    const grid = this.state.grid;\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[0].length; j++) {\n        if (grid[i][j] === \"default\") {\n          grid[i][j] = currentColor;\n        }\n      }\n    }\n    this.setState({grid: grid});\n  }\n\n  handleMouseDown = (x, y) => {\n    const grid = this.state.grid;\n    grid[x][y] = this.state.currentColor;\n    this.setState({coloring: true, grid: grid});\n  }\n\n  handleMouseUp = () => {\n    this.setState({coloring: false});\n  }\n\n  handleMouseEnter = (x, y) => {\n    if (this.state.coloring) {\n      const grid = this.state.grid;\n      grid[x][y] = this.state.currentColor;\n      this.setState({grid: grid});\n    }\n  }\n\n  handleRemoveColumn = () => {\n      const grid = this.state.grid.map(row => row.slice(0, -1));\n      this.setState({grid: grid});\n  }\n\n  handleRemoveRow = () => {\n      const grid = this.state.grid.slice(0, -1);\n      this.setState({grid: grid});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Menu\n          handleAddColumn={this.handleAddColumn}\n          handleAddRow={this.handleAddRow}\n          handleClearAll={this.handleClearAll}\n          handleColorChange={this.handleColorChange}\n          handleFillAll={this.handleFillAll}\n          handleFillUncolored={this.handleFillUncolored}\n          handleRemoveColumn={this.handleRemoveColumn}\n          handleRemoveRow={this.handleRemoveRow}\n        />\n        <header className=\"App-header\">\n          <Table\n            grid={this.state.grid}\n            handleClick={this.handleClick}\n            handleMouseEnter={this.handleMouseEnter}\n            handleMouseDown={this.handleMouseDown}\n            handleMouseUp={this.handleMouseUp}\n            rows={this.state.grid ? this.state.grid.length : 0}\n            cols={this.state.grid.length ? this.state.grid[0].length : 0}\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootswatch/dist/cerulean/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}